"0","regression_sim2 <- function(simNum, n, b0, b1, b2, b3, b4, b5, x1_mean = 0, x1_sd = 1, err_mean = 0, err_sd = 1) {"
"0","  #changed x2 into variable with three conditions"
"0","  x1 <- sample(0:1, n, replace = T)"
"0","  x2 <- sample(0:2, n, replace = T)"
"0","  "
"0","  ##dummy code into x2 and x3"
"0","  x3 <- ifelse(x2 == 2, 1, 0)"
"0","  x2 <- ifelse(x2 == 1, 1, 0)"
"0","  "
"0","  ##model should have five terms total"
"0","  y <- b0 + (b1*x1) + (b2*x2) + (b3*x3) + (b4*x1*x2) + (b5*x1*x3) + rnorm(n, mean = 0, sd = 1)"
"0","  "
"0","  ##you may need to think about comparing the simpler model to the more complex model"
"0","  ##some may think you can't test the individual coefficients unless the interaction model fits better"
"0","  model1 <- lm(y~x1+x2+x3)"
"0","  model2 <- lm(y~ x1*x2+x1*x3)"
"0",""
"0","  ##get pvalue for f-test comparing models"
"0","  f_p <- anova(model1, model2)[2,6]"
"0","  "
"0","  output <- summary(model2)$coefficients"
"0","coefs <- output[,1]"
"0","ps <- output[,4]"
"0",""
"0","rsq1 <- summary(model1)$r.squared"
"0","rsq2 <- summary(model2)$r.squared"
"0",""
"0","results <- c(coefs, ps, rsq1, rsq2, f_p)"
"0","names(results) <- c('b0_coef', 'b1_coef', 'b2_coef', 'b3_coef', 'b4_coef', 'b5_coef',"
"0","                    'b0_p', 'b1_p', 'b2_p', 'b3_p', 'b4_p', 'b5_p', 'rsq1', 'rsq2',"
"0","                    'f_p')"
"0",""
"0","  return(results)"
"0","  "
"0","}"
"0",""
